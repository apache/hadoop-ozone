<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.8.5 on linux)" generated="20200902 18:19:33.859" rpa="false">
<suite id="s1" name="MultipartUpload" source="/home/elek/projects/ozone/hadoop-ozone/dist/src/main/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:19:33.887" level="INFO">${random} = 01285</msg>
<status status="PASS" starttime="20200902 18:19:33.886" endtime="20200902 18:19:33.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:19:33.887" level="INFO">${PREFIX} = 01285</msg>
<status status="PASS" starttime="20200902 18:19:33.887" endtime="20200902 18:19:33.887"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.886" endtime="20200902 18:19:33.887"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.886" endtime="20200902 18:19:33.887"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:33.893" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:33.895" level="INFO">${rc} = 1</msg>
<msg timestamp="20200902 18:19:33.895" level="INFO">${output} = which: no apt-get in (/home/elek/prog/protobuf-2.5.0/src:/home/elek/prog/android-sdk-linux/platform-tools/:/home/elek/bin:/home/elek/dotfiles/zsh/zplug/bin:/home/elek/.zplug/bin:/opt/esp-open-sdk/xten...</msg>
<status status="PASS" starttime="20200902 18:19:33.887" endtime="20200902 18:19:33.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:33.896" endtime="20200902 18:19:33.896"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:33.897" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:33.900" level="INFO">${rc} = 127</msg>
<msg timestamp="20200902 18:19:33.900" level="INFO">${output} = /bin/sh: yum: command not found</msg>
<status status="PASS" starttime="20200902 18:19:33.896" endtime="20200902 18:19:33.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:33.900" endtime="20200902 18:19:33.900"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.887" endtime="20200902 18:19:33.900"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.887" endtime="20200902 18:19:33.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:33.900" endtime="20200902 18:19:33.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:33.901" endtime="20200902 18:19:33.901"></status>
</kw>
<msg timestamp="20200902 18:19:33.901" level="INFO">${BUCKET} = ozonetest</msg>
<status status="PASS" starttime="20200902 18:19:33.901" endtime="20200902 18:19:33.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200902 18:19:33.901" level="INFO">${BUCKET} = ozonetest</msg>
<status status="PASS" starttime="20200902 18:19:33.901" endtime="20200902 18:19:33.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:33.901" endtime="20200902 18:19:33.901"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.886" endtime="20200902 18:19:33.901"></status>
</kw>
<test id="s1-t1" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:19:33.902" level="INFO">${random} = 46483</msg>
<status status="PASS" starttime="20200902 18:19:33.902" endtime="20200902 18:19:33.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:19:33.903" level="INFO">${PREFIX} = 46483</msg>
<status status="PASS" starttime="20200902 18:19:33.902" endtime="20200902 18:19:33.903"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.902" endtime="20200902 18:19:33.903"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:33.906" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 46483/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:35.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:35.656" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:33.904" endtime="20200902 18:19:35.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:35.656" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:35.656" endtime="20200902 18:19:35.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:35.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:35.656" endtime="20200902 18:19:35.657"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:33.903" endtime="20200902 18:19:35.657"></status>
</kw>
<msg timestamp="20200902 18:19:35.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:33.903" endtime="20200902 18:19:35.657"></status>
</kw>
<msg timestamp="20200902 18:19:35.657" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:33.903" endtime="20200902 18:19:35.657"></status>
</kw>
<msg timestamp="20200902 18:19:35.657" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:33.903" endtime="20200902 18:19:35.657"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:35.659" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:35.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:35.685" level="INFO">${output} = clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--</msg>
<status status="PASS" starttime="20200902 18:19:35.657" endtime="20200902 18:19:35.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:35.686" level="INFO">clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--</msg>
<status status="PASS" starttime="20200902 18:19:35.685" endtime="20200902 18:19:35.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:35.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:35.686" endtime="20200902 18:19:35.686"></status>
</kw>
<msg timestamp="20200902 18:19:35.686" level="INFO">${uploadID} = clh7jIfEllboXsvoiAE99WOzJoTgwx2CBkcaXqsGxRkcam9MuRg2hc.d0By8EkfWKJRAQ4IV4ahKoV2d_14nfg--</msg>
<status status="PASS" starttime="20200902 18:19:35.657" endtime="20200902 18:19:35.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:35.686" endtime="20200902 18:19:35.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:35.687" endtime="20200902 18:19:35.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:35.687" endtime="20200902 18:19:35.687"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:35.690" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 46483/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:37.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:37.393" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:35.688" endtime="20200902 18:19:37.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.393" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:37.393" endtime="20200902 18:19:37.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:37.394" endtime="20200902 18:19:37.394"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:35.688" endtime="20200902 18:19:37.394"></status>
</kw>
<msg timestamp="20200902 18:19:37.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:35.688" endtime="20200902 18:19:37.394"></status>
</kw>
<msg timestamp="20200902 18:19:37.394" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:35.687" endtime="20200902 18:19:37.394"></status>
</kw>
<msg timestamp="20200902 18:19:37.394" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--"
}</msg>
<status status="PASS" starttime="20200902 18:19:35.687" endtime="20200902 18:19:37.394"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${nextUploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:37.396" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "46483/multipartKey",
    "UploadId": "2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:37.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:37.423" level="INFO">${output} = 2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--</msg>
<status status="PASS" starttime="20200902 18:19:37.395" endtime="20200902 18:19:37.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.423" level="INFO">2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--</msg>
<status status="PASS" starttime="20200902 18:19:37.423" endtime="20200902 18:19:37.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:37.423" endtime="20200902 18:19:37.424"></status>
</kw>
<msg timestamp="20200902 18:19:37.424" level="INFO">${nextUploadID} = 2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg--</msg>
<status status="PASS" starttime="20200902 18:19:37.394" endtime="20200902 18:19:37.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:37.424" endtime="20200902 18:19:37.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:37.424" endtime="20200902 18:19:37.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:37.424" endtime="20200902 18:19:37.425"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:37.425" endtime="20200902 18:19:37.425"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:37.427" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:37.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:37.552" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.120197 s, 43.6 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:37.426" endtime="20200902 18:19:37.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.552" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.120197 s, 43.6 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:37.552" endtime="20200902 18:19:37.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:37.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:37.552" endtime="20200902 18:19:37.553"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:37.426" endtime="20200902 18:19:37.553"></status>
</kw>
<msg timestamp="20200902 18:19:37.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:37.426" endtime="20200902 18:19:37.553"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:37.426" endtime="20200902 18:19:37.553"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:37.425" endtime="20200902 18:19:37.553"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:37.425" endtime="20200902 18:19:37.553"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:37.555" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 46483/multipartKey --part-number 1 --body /tmp/part1 --upload-id 2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:40.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:40.119" level="INFO">${output} = {
    "ETag": "\"582abefdc9aeea48718bb246fd8e9fe0\""
}</msg>
<status status="PASS" starttime="20200902 18:19:37.554" endtime="20200902 18:19:40.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:40.120" level="INFO">{
    "ETag": "\"582abefdc9aeea48718bb246fd8e9fe0\""
}</msg>
<status status="PASS" starttime="20200902 18:19:40.119" endtime="20200902 18:19:40.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:40.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:40.120" endtime="20200902 18:19:40.120"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:37.554" endtime="20200902 18:19:40.120"></status>
</kw>
<msg timestamp="20200902 18:19:40.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:37.554" endtime="20200902 18:19:40.120"></status>
</kw>
<msg timestamp="20200902 18:19:40.120" level="INFO">${output} = {
    "ETag": "\"582abefdc9aeea48718bb246fd8e9fe0\""
}</msg>
<status status="PASS" starttime="20200902 18:19:37.553" endtime="20200902 18:19:40.120"></status>
</kw>
<msg timestamp="20200902 18:19:40.121" level="INFO">${result} = {
    "ETag": "\"582abefdc9aeea48718bb246fd8e9fe0\""
}</msg>
<status status="PASS" starttime="20200902 18:19:37.553" endtime="20200902 18:19:40.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:40.121" endtime="20200902 18:19:40.121"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:40.123" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:40.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:40.245" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.117722 s, 44.5 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:40.122" endtime="20200902 18:19:40.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:40.245" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.117722 s, 44.5 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:40.245" endtime="20200902 18:19:40.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:40.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:40.246" endtime="20200902 18:19:40.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:40.122" endtime="20200902 18:19:40.246"></status>
</kw>
<msg timestamp="20200902 18:19:40.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:40.122" endtime="20200902 18:19:40.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:40.122" endtime="20200902 18:19:40.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:40.121" endtime="20200902 18:19:40.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:40.121" endtime="20200902 18:19:40.246"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:40.249" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 46483/multipartKey --part-number 1 --body /tmp/part1 --upload-id 2uNdiFe5_yS_YaUBus_7jg4B_F1rHfvy4J31pLvZjNyaXGcNr8mxZF6VDBzaY2cPu37adc8WKtUqZmLkPPRBqg-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:46.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:46.335" level="INFO">${output} = {
    "ETag": "\"c8dd705ecf14576a80ed8f568c4a6ae7\""
}</msg>
<status status="PASS" starttime="20200902 18:19:40.247" endtime="20200902 18:19:46.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:46.335" level="INFO">{
    "ETag": "\"c8dd705ecf14576a80ed8f568c4a6ae7\""
}</msg>
<status status="PASS" starttime="20200902 18:19:46.335" endtime="20200902 18:19:46.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:46.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:46.335" endtime="20200902 18:19:46.335"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:40.247" endtime="20200902 18:19:46.336"></status>
</kw>
<msg timestamp="20200902 18:19:46.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:40.247" endtime="20200902 18:19:46.336"></status>
</kw>
<msg timestamp="20200902 18:19:46.336" level="INFO">${output} = {
    "ETag": "\"c8dd705ecf14576a80ed8f568c4a6ae7\""
}</msg>
<status status="PASS" starttime="20200902 18:19:40.247" endtime="20200902 18:19:46.336"></status>
</kw>
<msg timestamp="20200902 18:19:46.336" level="INFO">${result} = {
    "ETag": "\"c8dd705ecf14576a80ed8f568c4a6ae7\""
}</msg>
<status status="PASS" starttime="20200902 18:19:40.246" endtime="20200902 18:19:46.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:46.336" endtime="20200902 18:19:46.336"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:19:33.902" endtime="20200902 18:19:46.337" critical="yes"></status>
</test>
<test id="s1-t2" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:19:46.338" level="INFO">${random} = 91674</msg>
<status status="PASS" starttime="20200902 18:19:46.337" endtime="20200902 18:19:46.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:19:46.338" level="INFO">${PREFIX} = 91674</msg>
<status status="PASS" starttime="20200902 18:19:46.338" endtime="20200902 18:19:46.338"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:46.337" endtime="20200902 18:19:46.338"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:46.341" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 91674/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:48.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:48.048" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "UploadId": "6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--"
}</msg>
<status status="PASS" starttime="20200902 18:19:46.339" endtime="20200902 18:19:48.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.048" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "UploadId": "6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--"
}</msg>
<status status="PASS" starttime="20200902 18:19:48.048" endtime="20200902 18:19:48.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:48.049" endtime="20200902 18:19:48.049"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:46.339" endtime="20200902 18:19:48.049"></status>
</kw>
<msg timestamp="20200902 18:19:48.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:46.339" endtime="20200902 18:19:48.049"></status>
</kw>
<msg timestamp="20200902 18:19:48.049" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "UploadId": "6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--"
}</msg>
<status status="PASS" starttime="20200902 18:19:46.338" endtime="20200902 18:19:48.049"></status>
</kw>
<msg timestamp="20200902 18:19:48.049" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "UploadId": "6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--"
}</msg>
<status status="PASS" starttime="20200902 18:19:46.338" endtime="20200902 18:19:48.049"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:48.051" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "UploadId": "6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:48.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:48.077" level="INFO">${output} = 6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--</msg>
<status status="PASS" starttime="20200902 18:19:48.050" endtime="20200902 18:19:48.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.078" level="INFO">6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--</msg>
<status status="PASS" starttime="20200902 18:19:48.077" endtime="20200902 18:19:48.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:48.078" endtime="20200902 18:19:48.078"></status>
</kw>
<msg timestamp="20200902 18:19:48.078" level="INFO">${uploadID} = 6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w--</msg>
<status status="PASS" starttime="20200902 18:19:48.049" endtime="20200902 18:19:48.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:48.078" endtime="20200902 18:19:48.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:48.079" endtime="20200902 18:19:48.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:48.079" endtime="20200902 18:19:48.079"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:48.082" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:48.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:48.203" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.117704 s, 44.5 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.203" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.117704 s, 44.5 MB/s</msg>
<status status="PASS" starttime="20200902 18:19:48.203" endtime="20200902 18:19:48.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:48.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:48.204" endtime="20200902 18:19:48.204"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.204"></status>
</kw>
<msg timestamp="20200902 18:19:48.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.204"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.204"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.204"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:48.080" endtime="20200902 18:19:48.204"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:48.207" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 91674/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:54.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:54.918" level="INFO">${output} = {
    "ETag": "\"1175f836fcd4d1c96590c471c78e76b9\""
}</msg>
<status status="PASS" starttime="20200902 18:19:48.205" endtime="20200902 18:19:54.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.919" level="INFO">{
    "ETag": "\"1175f836fcd4d1c96590c471c78e76b9\""
}</msg>
<status status="PASS" starttime="20200902 18:19:54.919" endtime="20200902 18:19:54.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:54.919" endtime="20200902 18:19:54.920"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:48.205" endtime="20200902 18:19:54.920"></status>
</kw>
<msg timestamp="20200902 18:19:54.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:48.205" endtime="20200902 18:19:54.920"></status>
</kw>
<msg timestamp="20200902 18:19:54.920" level="INFO">${output} = {
    "ETag": "\"1175f836fcd4d1c96590c471c78e76b9\""
}</msg>
<status status="PASS" starttime="20200902 18:19:48.205" endtime="20200902 18:19:54.920"></status>
</kw>
<msg timestamp="20200902 18:19:54.920" level="INFO">${result} = {
    "ETag": "\"1175f836fcd4d1c96590c471c78e76b9\""
}</msg>
<status status="PASS" starttime="20200902 18:19:48.204" endtime="20200902 18:19:54.920"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:54.922" level="INFO">Running command 'echo '{
    "ETag": "\"1175f836fcd4d1c96590c471c78e76b9\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:54.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:54.949" level="INFO">${output} = "1175f836fcd4d1c96590c471c78e76b9"</msg>
<status status="PASS" starttime="20200902 18:19:54.921" endtime="20200902 18:19:54.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.949" level="INFO">"1175f836fcd4d1c96590c471c78e76b9"</msg>
<status status="PASS" starttime="20200902 18:19:54.949" endtime="20200902 18:19:54.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:54.949" endtime="20200902 18:19:54.950"></status>
</kw>
<msg timestamp="20200902 18:19:54.950" level="INFO">${eTag1} = "1175f836fcd4d1c96590c471c78e76b9"</msg>
<status status="PASS" starttime="20200902 18:19:54.920" endtime="20200902 18:19:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:54.950" endtime="20200902 18:19:54.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:54.952" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200902 18:19:54.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:54.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:19:54.951" endtime="20200902 18:19:54.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.955" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:19:54.955" endtime="20200902 18:19:54.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:54.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:54.955" endtime="20200902 18:19:54.955"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:54.951" endtime="20200902 18:19:54.955"></status>
</kw>
<msg timestamp="20200902 18:19:54.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:54.950" endtime="20200902 18:19:54.956"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:54.950" endtime="20200902 18:19:54.956"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:54.958" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 91674/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:56.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:56.828" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:19:54.957" endtime="20200902 18:19:56.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:56.829" level="INFO">{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:19:56.828" endtime="20200902 18:19:56.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:56.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:56.829" endtime="20200902 18:19:56.829"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:54.957" endtime="20200902 18:19:56.829"></status>
</kw>
<msg timestamp="20200902 18:19:56.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:54.956" endtime="20200902 18:19:56.829"></status>
</kw>
<msg timestamp="20200902 18:19:56.829" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:19:54.956" endtime="20200902 18:19:56.829"></status>
</kw>
<msg timestamp="20200902 18:19:56.829" level="INFO">${result} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:19:54.956" endtime="20200902 18:19:56.829"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:56.831" level="INFO">Running command 'echo '{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:56.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:56.858" level="INFO">${output} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:19:56.830" endtime="20200902 18:19:56.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:56.858" level="INFO">"9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:19:56.858" endtime="20200902 18:19:56.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:56.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:56.858" endtime="20200902 18:19:56.859"></status>
</kw>
<msg timestamp="20200902 18:19:56.859" level="INFO">${eTag2} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:19:56.830" endtime="20200902 18:19:56.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:56.859" endtime="20200902 18:19:56.859"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:56.862" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id 6vnNctHv2BwIAwPLgIxMEJwng4MFcprTwVGDBJmfv2RzvCy4lOXbU3GwmsosH4qrshtLZvzCTSL6X8ZVtn5o8w-- --bucket ozonetest --key 91674/multipartKey1 --multipart-upload 'Parts=[{ETag="1175f836fcd4d1c96590c471c78e76b9",PartNumber=1},{ETag="9e6cc3c0311e8eb9548e860d8caf6734",PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:19:58.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:19:58.452" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/91674%2FmultipartKey1",
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"...</msg>
<status status="PASS" starttime="20200902 18:19:56.860" endtime="20200902 18:19:58.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:19:58.453" level="INFO">{
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/91674%2FmultipartKey1",
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\""
}</msg>
<status status="PASS" starttime="20200902 18:19:58.453" endtime="20200902 18:19:58.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:19:58.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:19:58.453" endtime="20200902 18:19:58.453"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:56.860" endtime="20200902 18:19:58.453"></status>
</kw>
<msg timestamp="20200902 18:19:58.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:56.860" endtime="20200902 18:19:58.454"></status>
</kw>
<msg timestamp="20200902 18:19:58.454" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/91674%2FmultipartKey1",
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"...</msg>
<status status="PASS" starttime="20200902 18:19:56.860" endtime="20200902 18:19:58.454"></status>
</kw>
<msg timestamp="20200902 18:19:58.454" level="INFO">${result} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/91674%2FmultipartKey1",
    "Bucket": "ozonetest",
    "Key": "91674/multipartKey1",
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"...</msg>
<status status="PASS" starttime="20200902 18:19:56.859" endtime="20200902 18:19:58.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:58.454" endtime="20200902 18:19:58.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:58.454" endtime="20200902 18:19:58.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:19:58.455" endtime="20200902 18:19:58.455"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:19:58.457" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com get-object --bucket ozonetest --key 91674/multipartKey1 /tmp/91674-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:01.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:01.042" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:19:48 GMT",
    "ContentLength": 5242886,
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:19:58.456" endtime="20200902 18:20:01.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.043" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:19:48 GMT",
    "ContentLength": 5242886,
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"",
    "ContentType": "binary/octet-stream",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200902 18:20:01.043" endtime="20200902 18:20:01.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:01.043" endtime="20200902 18:20:01.043"></status>
</kw>
<status status="PASS" starttime="20200902 18:19:58.455" endtime="20200902 18:20:01.043"></status>
</kw>
<msg timestamp="20200902 18:20:01.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:19:58.455" endtime="20200902 18:20:01.044"></status>
</kw>
<msg timestamp="20200902 18:20:01.044" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:19:48 GMT",
    "ContentLength": 5242886,
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:19:58.455" endtime="20200902 18:20:01.044"></status>
</kw>
<msg timestamp="20200902 18:20:01.044" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:19:48 GMT",
    "ContentLength": 5242886,
    "ETag": "\"880998ce5ae19d4beca8f1c32edcd098-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:19:58.455" endtime="20200902 18:20:01.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:01.046" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/91674-multipartKey1'.</msg>
<msg timestamp="20200902 18:20:01.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:01.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:01.045" endtime="20200902 18:20:01.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.052" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:01.051" endtime="20200902 18:20:01.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:01.052" endtime="20200902 18:20:01.052"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.044" endtime="20200902 18:20:01.052"></status>
</kw>
<msg timestamp="20200902 18:20:01.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:01.044" endtime="20200902 18:20:01.052"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.044" endtime="20200902 18:20:01.052"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:01.055" level="INFO">Running command 'md5sum /tmp/91674-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:01.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:01.065" level="INFO">${output} = 2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.053" endtime="20200902 18:20:01.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.066" level="INFO">2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.066" endtime="20200902 18:20:01.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:01.066" endtime="20200902 18:20:01.066"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.053" endtime="20200902 18:20:01.066"></status>
</kw>
<msg timestamp="20200902 18:20:01.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:01.053" endtime="20200902 18:20:01.067"></status>
</kw>
<msg timestamp="20200902 18:20:01.067" level="INFO">${checksumbefore} = 2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.053" endtime="20200902 18:20:01.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:01.069" level="INFO">Running command 'md5sum /tmp/91674-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:01.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:01.079" level="INFO">${output} = 2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.067" endtime="20200902 18:20:01.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.080" level="INFO">2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.080" endtime="20200902 18:20:01.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:01.080" endtime="20200902 18:20:01.081"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.067" endtime="20200902 18:20:01.081"></status>
</kw>
<msg timestamp="20200902 18:20:01.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:01.067" endtime="20200902 18:20:01.081"></status>
</kw>
<msg timestamp="20200902 18:20:01.081" level="INFO">${checksumafter} = 2169d49faba66ca04c1d095aae172946</msg>
<status status="PASS" starttime="20200902 18:20:01.067" endtime="20200902 18:20:01.081"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:01.081" endtime="20200902 18:20:01.081"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.052" endtime="20200902 18:20:01.081"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:19:46.337" endtime="20200902 18:20:01.081" critical="yes"></status>
</test>
<test id="s1-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:01.082" level="INFO">${random} = 86808</msg>
<status status="PASS" starttime="20200902 18:20:01.082" endtime="20200902 18:20:01.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:01.082" level="INFO">${PREFIX} = 86808</msg>
<status status="PASS" starttime="20200902 18:20:01.082" endtime="20200902 18:20:01.082"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.082" endtime="20200902 18:20:01.082"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:01.085" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 86808/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:02.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:02.893" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "86808/multipartKey2",
    "UploadId": "ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:01.083" endtime="20200902 18:20:02.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.893" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "86808/multipartKey2",
    "UploadId": "ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:02.893" endtime="20200902 18:20:02.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:02.893" endtime="20200902 18:20:02.894"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:01.083" endtime="20200902 18:20:02.894"></status>
</kw>
<msg timestamp="20200902 18:20:02.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:01.083" endtime="20200902 18:20:02.894"></status>
</kw>
<msg timestamp="20200902 18:20:02.894" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "86808/multipartKey2",
    "UploadId": "ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:01.083" endtime="20200902 18:20:02.894"></status>
</kw>
<msg timestamp="20200902 18:20:02.894" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "86808/multipartKey2",
    "UploadId": "ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:01.083" endtime="20200902 18:20:02.894"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:02.896" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "86808/multipartKey2",
    "UploadId": "ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:02.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:02.921" level="INFO">${output} = ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--</msg>
<status status="PASS" starttime="20200902 18:20:02.894" endtime="20200902 18:20:02.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.922" level="INFO">ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--</msg>
<status status="PASS" starttime="20200902 18:20:02.921" endtime="20200902 18:20:02.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:02.922" endtime="20200902 18:20:02.922"></status>
</kw>
<msg timestamp="20200902 18:20:02.923" level="INFO">${uploadID} = ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA--</msg>
<status status="PASS" starttime="20200902 18:20:02.894" endtime="20200902 18:20:02.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:02.923" endtime="20200902 18:20:02.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:02.923" endtime="20200902 18:20:02.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:02.923" endtime="20200902 18:20:02.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part1" &gt; /tmp/part1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:02.925" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20200902 18:20:02.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:02.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:02.924" endtime="20200902 18:20:02.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.928" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:02.928" endtime="20200902 18:20:02.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:02.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:02.929" endtime="20200902 18:20:02.929"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:02.924" endtime="20200902 18:20:02.929"></status>
</kw>
<msg timestamp="20200902 18:20:02.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:02.924" endtime="20200902 18:20:02.929"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:02.924" endtime="20200902 18:20:02.929"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:02.932" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 86808/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:04.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:04.613" level="INFO">${output} = {
    "ETag": "\"871c68189b326a94de95e219f660448e\""
}</msg>
<status status="PASS" starttime="20200902 18:20:02.930" endtime="20200902 18:20:04.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.614" level="INFO">{
    "ETag": "\"871c68189b326a94de95e219f660448e\""
}</msg>
<status status="PASS" starttime="20200902 18:20:04.613" endtime="20200902 18:20:04.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:04.614" endtime="20200902 18:20:04.614"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:02.930" endtime="20200902 18:20:04.614"></status>
</kw>
<msg timestamp="20200902 18:20:04.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:02.930" endtime="20200902 18:20:04.614"></status>
</kw>
<msg timestamp="20200902 18:20:04.614" level="INFO">${output} = {
    "ETag": "\"871c68189b326a94de95e219f660448e\""
}</msg>
<status status="PASS" starttime="20200902 18:20:02.930" endtime="20200902 18:20:04.614"></status>
</kw>
<msg timestamp="20200902 18:20:04.614" level="INFO">${result} = {
    "ETag": "\"871c68189b326a94de95e219f660448e\""
}</msg>
<status status="PASS" starttime="20200902 18:20:02.929" endtime="20200902 18:20:04.614"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:04.616" level="INFO">Running command 'echo '{
    "ETag": "\"871c68189b326a94de95e219f660448e\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:04.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:04.643" level="INFO">${output} = "871c68189b326a94de95e219f660448e"</msg>
<status status="PASS" starttime="20200902 18:20:04.615" endtime="20200902 18:20:04.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.643" level="INFO">"871c68189b326a94de95e219f660448e"</msg>
<status status="PASS" starttime="20200902 18:20:04.643" endtime="20200902 18:20:04.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:04.643" endtime="20200902 18:20:04.644"></status>
</kw>
<msg timestamp="20200902 18:20:04.644" level="INFO">${eTag1} = "871c68189b326a94de95e219f660448e"</msg>
<status status="PASS" starttime="20200902 18:20:04.615" endtime="20200902 18:20:04.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:04.644" endtime="20200902 18:20:04.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:04.646" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200902 18:20:04.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:04.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:04.645" endtime="20200902 18:20:04.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.649" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:04.649" endtime="20200902 18:20:04.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:04.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:04.649" endtime="20200902 18:20:04.649"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:04.645" endtime="20200902 18:20:04.649"></status>
</kw>
<msg timestamp="20200902 18:20:04.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:04.644" endtime="20200902 18:20:04.649"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:04.644" endtime="20200902 18:20:04.650"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:04.652" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 86808/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:06.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:06.509" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:04.651" endtime="20200902 18:20:06.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:06.509" level="INFO">{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:06.509" endtime="20200902 18:20:06.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:06.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:06.510" endtime="20200902 18:20:06.510"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:04.650" endtime="20200902 18:20:06.510"></status>
</kw>
<msg timestamp="20200902 18:20:06.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:04.650" endtime="20200902 18:20:06.510"></status>
</kw>
<msg timestamp="20200902 18:20:06.510" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:04.650" endtime="20200902 18:20:06.510"></status>
</kw>
<msg timestamp="20200902 18:20:06.510" level="INFO">${result} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:04.650" endtime="20200902 18:20:06.510"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:06.512" level="INFO">Running command 'echo '{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:06.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:06.538" level="INFO">${output} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:06.511" endtime="20200902 18:20:06.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:06.539" level="INFO">"9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:06.539" endtime="20200902 18:20:06.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:06.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:06.539" endtime="20200902 18:20:06.539"></status>
</kw>
<msg timestamp="20200902 18:20:06.539" level="INFO">${eTag2} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:06.511" endtime="20200902 18:20:06.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:06.540" endtime="20200902 18:20:06.540"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:06.542" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id ft5AHUXrsDIFvYa58yaiup2Oy8QhY5pAbeie3CkUEeXoxIcJiiNFPKMX1ImUZbvbvwKEwG6vVB7KfcpJ4FcJRA-- --bucket ozonetest --key 86808/multipartKey2 --multipart-upload 'Parts=[{ETag="871c68189b326a94de95e219f660448e",PartNumber=1},{ETag="9e6cc3c0311e8eb9548e860d8caf6734",PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:08.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:08.301" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed size</msg>
<status status="PASS" starttime="20200902 18:20:06.541" endtime="20200902 18:20:08.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:08.301" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed size</msg>
<status status="PASS" starttime="20200902 18:20:08.301" endtime="20200902 18:20:08.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:08.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:08.301" endtime="20200902 18:20:08.302"></status>
</kw>
<msg timestamp="20200902 18:20:08.302" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed size</msg>
<status status="PASS" starttime="20200902 18:20:06.540" endtime="20200902 18:20:08.302"></status>
</kw>
<msg timestamp="20200902 18:20:08.302" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed size</msg>
<status status="PASS" starttime="20200902 18:20:06.540" endtime="20200902 18:20:08.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:08.302" endtime="20200902 18:20:08.303"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:01.081" endtime="20200902 18:20:08.303" critical="yes"></status>
</test>
<test id="s1-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:08.304" level="INFO">${random} = 23141</msg>
<status status="PASS" starttime="20200902 18:20:08.303" endtime="20200902 18:20:08.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:08.304" level="INFO">${PREFIX} = 23141</msg>
<status status="PASS" starttime="20200902 18:20:08.304" endtime="20200902 18:20:08.304"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:08.303" endtime="20200902 18:20:08.304"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:08.307" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 23141/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:09.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:09.637" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "UploadId": "taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--"
}</msg>
<status status="PASS" starttime="20200902 18:20:08.305" endtime="20200902 18:20:09.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:09.638" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "UploadId": "taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--"
}</msg>
<status status="PASS" starttime="20200902 18:20:09.637" endtime="20200902 18:20:09.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:09.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:09.638" endtime="20200902 18:20:09.638"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:08.305" endtime="20200902 18:20:09.638"></status>
</kw>
<msg timestamp="20200902 18:20:09.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:08.304" endtime="20200902 18:20:09.639"></status>
</kw>
<msg timestamp="20200902 18:20:09.639" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "UploadId": "taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--"
}</msg>
<status status="PASS" starttime="20200902 18:20:08.304" endtime="20200902 18:20:09.639"></status>
</kw>
<msg timestamp="20200902 18:20:09.639" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "UploadId": "taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--"
}</msg>
<status status="PASS" starttime="20200902 18:20:08.304" endtime="20200902 18:20:09.639"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:09.641" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "UploadId": "taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:09.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:09.667" level="INFO">${output} = taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--</msg>
<status status="PASS" starttime="20200902 18:20:09.639" endtime="20200902 18:20:09.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:09.667" level="INFO">taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--</msg>
<status status="PASS" starttime="20200902 18:20:09.667" endtime="20200902 18:20:09.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:09.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:09.667" endtime="20200902 18:20:09.668"></status>
</kw>
<msg timestamp="20200902 18:20:09.668" level="INFO">${uploadID} = taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g--</msg>
<status status="PASS" starttime="20200902 18:20:09.639" endtime="20200902 18:20:09.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:09.668" endtime="20200902 18:20:09.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:09.668" endtime="20200902 18:20:09.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:09.669" endtime="20200902 18:20:09.669"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:09.671" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:11.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:11.474" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:09.670" endtime="20200902 18:20:11.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:11.475" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entity tag may not match the part's entity tag.</msg>
<status status="PASS" starttime="20200902 18:20:11.475" endtime="20200902 18:20:11.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:11.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:11.475" endtime="20200902 18:20:11.476"></status>
</kw>
<msg timestamp="20200902 18:20:11.476" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:09.669" endtime="20200902 18:20:11.476"></status>
</kw>
<msg timestamp="20200902 18:20:11.476" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:09.669" endtime="20200902 18:20:11.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:11.476" endtime="20200902 18:20:11.476"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:11.479" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:13.318" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:13.318" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:11.477" endtime="20200902 18:20:13.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:13.319" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entity tag may not match the part's entity tag.</msg>
<status status="PASS" starttime="20200902 18:20:13.318" endtime="20200902 18:20:13.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:13.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:13.319" endtime="20200902 18:20:13.319"></status>
</kw>
<msg timestamp="20200902 18:20:13.319" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:11.477" endtime="20200902 18:20:13.319"></status>
</kw>
<msg timestamp="20200902 18:20:13.319" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:11.476" endtime="20200902 18:20:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:13.320" endtime="20200902 18:20:13.320"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:13.322" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:13.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:13.469" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.143274 s, 36.6 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:13.321" endtime="20200902 18:20:13.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:13.469" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.143274 s, 36.6 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:13.469" endtime="20200902 18:20:13.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:13.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:13.469" endtime="20200902 18:20:13.470"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:13.321" endtime="20200902 18:20:13.470"></status>
</kw>
<msg timestamp="20200902 18:20:13.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:13.321" endtime="20200902 18:20:13.470"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:13.320" endtime="20200902 18:20:13.470"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:13.320" endtime="20200902 18:20:13.470"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:13.320" endtime="20200902 18:20:13.470"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:13.473" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 23141/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:18.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:18.330" level="INFO">${output} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:13.471" endtime="20200902 18:20:18.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:18.331" level="INFO">{
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:18.330" endtime="20200902 18:20:18.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:18.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:18.331" endtime="20200902 18:20:18.332"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:13.471" endtime="20200902 18:20:18.332"></status>
</kw>
<msg timestamp="20200902 18:20:18.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:13.471" endtime="20200902 18:20:18.332"></status>
</kw>
<msg timestamp="20200902 18:20:18.332" level="INFO">${output} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:13.471" endtime="20200902 18:20:18.332"></status>
</kw>
<msg timestamp="20200902 18:20:18.332" level="INFO">${result} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:13.470" endtime="20200902 18:20:18.332"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:18.334" level="INFO">Running command 'echo '{
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:18.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:18.359" level="INFO">${output} = "e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:18.332" endtime="20200902 18:20:18.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:18.360" level="INFO">"e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:18.360" endtime="20200902 18:20:18.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:18.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:18.360" endtime="20200902 18:20:18.360"></status>
</kw>
<msg timestamp="20200902 18:20:18.361" level="INFO">${eTag1} = "e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:18.332" endtime="20200902 18:20:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:18.361" endtime="20200902 18:20:18.361"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:18.363" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 23141/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:25.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:25.487" level="INFO">${output} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:18.362" endtime="20200902 18:20:25.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.487" level="INFO">{
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:25.487" endtime="20200902 18:20:25.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:25.488" endtime="20200902 18:20:25.488"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:18.362" endtime="20200902 18:20:25.488"></status>
</kw>
<msg timestamp="20200902 18:20:25.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:18.362" endtime="20200902 18:20:25.488"></status>
</kw>
<msg timestamp="20200902 18:20:25.488" level="INFO">${output} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:18.361" endtime="20200902 18:20:25.488"></status>
</kw>
<msg timestamp="20200902 18:20:25.488" level="INFO">${result} = {
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}</msg>
<status status="PASS" starttime="20200902 18:20:18.361" endtime="20200902 18:20:25.488"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:25.491" level="INFO">Running command 'echo '{
    "ETag": "\"e451f869a202ec4e58f6f83648bf225b\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:25.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:25.520" level="INFO">${output} = "e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:25.489" endtime="20200902 18:20:25.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.521" level="INFO">"e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:25.520" endtime="20200902 18:20:25.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:25.521" endtime="20200902 18:20:25.522"></status>
</kw>
<msg timestamp="20200902 18:20:25.522" level="INFO">${eTag2} = "e451f869a202ec4e58f6f83648bf225b"</msg>
<status status="PASS" starttime="20200902 18:20:25.489" endtime="20200902 18:20:25.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:25.522" endtime="20200902 18:20:25.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part3" &gt; /tmp/part3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:25.524" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20200902 18:20:25.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:25.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:25.523" endtime="20200902 18:20:25.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.527" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:25.527" endtime="20200902 18:20:25.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:25.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:25.527" endtime="20200902 18:20:25.527"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:25.522" endtime="20200902 18:20:25.527"></status>
</kw>
<msg timestamp="20200902 18:20:25.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:25.522" endtime="20200902 18:20:25.528"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:25.522" endtime="20200902 18:20:25.528"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:25.532" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 23141/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:27.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:27.169" level="INFO">${output} = {
    "ETag": "\"804f368834f04e8d39a8a7c76ba870e3\""
}</msg>
<status status="PASS" starttime="20200902 18:20:25.529" endtime="20200902 18:20:27.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:27.170" level="INFO">{
    "ETag": "\"804f368834f04e8d39a8a7c76ba870e3\""
}</msg>
<status status="PASS" starttime="20200902 18:20:27.169" endtime="20200902 18:20:27.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:27.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:27.170" endtime="20200902 18:20:27.170"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:25.528" endtime="20200902 18:20:27.170"></status>
</kw>
<msg timestamp="20200902 18:20:27.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:25.528" endtime="20200902 18:20:27.171"></status>
</kw>
<msg timestamp="20200902 18:20:27.171" level="INFO">${output} = {
    "ETag": "\"804f368834f04e8d39a8a7c76ba870e3\""
}</msg>
<status status="PASS" starttime="20200902 18:20:25.528" endtime="20200902 18:20:27.171"></status>
</kw>
<msg timestamp="20200902 18:20:27.171" level="INFO">${result} = {
    "ETag": "\"804f368834f04e8d39a8a7c76ba870e3\""
}</msg>
<status status="PASS" starttime="20200902 18:20:25.528" endtime="20200902 18:20:27.171"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag3}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:27.172" level="INFO">Running command 'echo '{
    "ETag": "\"804f368834f04e8d39a8a7c76ba870e3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:27.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:27.198" level="INFO">${output} = "804f368834f04e8d39a8a7c76ba870e3"</msg>
<status status="PASS" starttime="20200902 18:20:27.171" endtime="20200902 18:20:27.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:27.199" level="INFO">"804f368834f04e8d39a8a7c76ba870e3"</msg>
<status status="PASS" starttime="20200902 18:20:27.198" endtime="20200902 18:20:27.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:27.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:27.199" endtime="20200902 18:20:27.199"></status>
</kw>
<msg timestamp="20200902 18:20:27.199" level="INFO">${eTag3} = "804f368834f04e8d39a8a7c76ba870e3"</msg>
<status status="PASS" starttime="20200902 18:20:27.171" endtime="20200902 18:20:27.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:27.200" endtime="20200902 18:20:27.200"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:27.202" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:29.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:29.033" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:27.200" endtime="20200902 18:20:29.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:29.033" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entity tag may not match the part's entity tag.</msg>
<status status="PASS" starttime="20200902 18:20:29.033" endtime="20200902 18:20:29.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:29.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:29.034" endtime="20200902 18:20:29.034"></status>
</kw>
<msg timestamp="20200902 18:20:29.034" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:27.200" endtime="20200902 18:20:29.034"></status>
</kw>
<msg timestamp="20200902 18:20:29.034" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:27.200" endtime="20200902 18:20:29.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:29.034" endtime="20200902 18:20:29.034"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:29.037" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag="e451f869a202ec4e58f6f83648bf225b",PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:30.741" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:30.741" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:29.035" endtime="20200902 18:20:30.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:30.741" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entity tag may not match the part's entity tag.</msg>
<status status="PASS" starttime="20200902 18:20:30.741" endtime="20200902 18:20:30.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:30.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:30.742" endtime="20200902 18:20:30.742"></status>
</kw>
<msg timestamp="20200902 18:20:30.742" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:29.035" endtime="20200902 18:20:30.742"></status>
</kw>
<msg timestamp="20200902 18:20:30.742" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found.  The part may not have been uploaded, or the specified entit...</msg>
<status status="PASS" starttime="20200902 18:20:29.035" endtime="20200902 18:20:30.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:30.742" endtime="20200902 18:20:30.742"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:30.744" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag="e451f869a202ec4e58f6f83648bf225b",PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:32.217" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:32.217" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. Parts must be ordered by part number.</msg>
<status status="PASS" starttime="20200902 18:20:30.743" endtime="20200902 18:20:32.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:32.218" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. Parts must be ordered by part number.</msg>
<status status="PASS" starttime="20200902 18:20:32.217" endtime="20200902 18:20:32.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:32.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:32.218" endtime="20200902 18:20:32.218"></status>
</kw>
<msg timestamp="20200902 18:20:32.218" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. Parts must be ordered by part number.</msg>
<status status="PASS" starttime="20200902 18:20:30.743" endtime="20200902 18:20:32.218"></status>
</kw>
<msg timestamp="20200902 18:20:32.218" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. Parts must be ordered by part number.</msg>
<status status="PASS" starttime="20200902 18:20:30.742" endtime="20200902 18:20:32.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:32.218" endtime="20200902 18:20:32.219"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:32.222" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id taB8e13yUeYnI8u2GvHV.olxdD_p1unkNx_i5gBEHMiBhnUFFcjgP62TPGQVMZ60RO3lJvANDFFM7jrICP7N.g-- --bucket ozonetest --key 23141/multipartKey3 --multipart-upload 'Parts=[{ETag="e451f869a202ec4e58f6f83648bf225b",PartNumber=1},{ETag="804f368834f04e8d39a8a7c76ba870e3",PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:34.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:34.261" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/23141%2FmultipartKey3",
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"...</msg>
<status status="PASS" starttime="20200902 18:20:32.220" endtime="20200902 18:20:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:34.262" level="INFO">{
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/23141%2FmultipartKey3",
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\""
}</msg>
<status status="PASS" starttime="20200902 18:20:34.262" endtime="20200902 18:20:34.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:34.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:34.262" endtime="20200902 18:20:34.262"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:32.220" endtime="20200902 18:20:34.263"></status>
</kw>
<msg timestamp="20200902 18:20:34.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:32.219" endtime="20200902 18:20:34.263"></status>
</kw>
<msg timestamp="20200902 18:20:34.263" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/23141%2FmultipartKey3",
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"...</msg>
<status status="PASS" starttime="20200902 18:20:32.219" endtime="20200902 18:20:34.263"></status>
</kw>
<msg timestamp="20200902 18:20:34.263" level="INFO">${result} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/23141%2FmultipartKey3",
    "Bucket": "ozonetest",
    "Key": "23141/multipartKey3",
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"...</msg>
<status status="PASS" starttime="20200902 18:20:32.219" endtime="20200902 18:20:34.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:34.263" endtime="20200902 18:20:34.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:34.263" endtime="20200902 18:20:34.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:34.264" endtime="20200902 18:20:34.264"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:34.266" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com get-object --bucket ozonetest --key 23141/multipartKey3 /tmp/23141-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:37.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:37.056" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:20:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:20:34.265" endtime="20200902 18:20:37.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.057" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:20:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"",
    "ContentType": "binary/octet-stream",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200902 18:20:37.057" endtime="20200902 18:20:37.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:37.057" endtime="20200902 18:20:37.057"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:34.265" endtime="20200902 18:20:37.057"></status>
</kw>
<msg timestamp="20200902 18:20:37.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:34.264" endtime="20200902 18:20:37.057"></status>
</kw>
<msg timestamp="20200902 18:20:37.058" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:20:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:20:34.264" endtime="20200902 18:20:37.058"></status>
</kw>
<msg timestamp="20200902 18:20:37.058" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:20:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"435ac64a486cde6c2497c03a185cf043-2\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:20:34.264" endtime="20200902 18:20:37.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:37.060" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/23141-multipartKey3'.</msg>
<msg timestamp="20200902 18:20:37.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:37.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:37.059" endtime="20200902 18:20:37.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.065" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:37.065" endtime="20200902 18:20:37.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:37.066" endtime="20200902 18:20:37.066"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.058" endtime="20200902 18:20:37.066"></status>
</kw>
<msg timestamp="20200902 18:20:37.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:37.058" endtime="20200902 18:20:37.066"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.058" endtime="20200902 18:20:37.066"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:37.069" level="INFO">Running command 'md5sum /tmp/23141-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:37.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:37.079" level="INFO">${output} = 2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.067" endtime="20200902 18:20:37.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.079" level="INFO">2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.079" endtime="20200902 18:20:37.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:37.080" endtime="20200902 18:20:37.080"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.067" endtime="20200902 18:20:37.080"></status>
</kw>
<msg timestamp="20200902 18:20:37.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:37.067" endtime="20200902 18:20:37.080"></status>
</kw>
<msg timestamp="20200902 18:20:37.080" level="INFO">${checksumbefore} = 2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.067" endtime="20200902 18:20:37.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:37.082" level="INFO">Running command 'md5sum /tmp/23141-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:37.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:37.093" level="INFO">${output} = 2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.081" endtime="20200902 18:20:37.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.094" level="INFO">2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.094" endtime="20200902 18:20:37.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:37.094" endtime="20200902 18:20:37.095"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.081" endtime="20200902 18:20:37.095"></status>
</kw>
<msg timestamp="20200902 18:20:37.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:37.081" endtime="20200902 18:20:37.095"></status>
</kw>
<msg timestamp="20200902 18:20:37.095" level="INFO">${checksumafter} = 2164fd51db59fd4c6319139be06a4889</msg>
<status status="PASS" starttime="20200902 18:20:37.080" endtime="20200902 18:20:37.095"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:37.095" endtime="20200902 18:20:37.095"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.066" endtime="20200902 18:20:37.095"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:08.303" endtime="20200902 18:20:37.095" critical="yes"></status>
</test>
<test id="s1-t5" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:37.096" level="INFO">${random} = 72135</msg>
<status status="PASS" starttime="20200902 18:20:37.096" endtime="20200902 18:20:37.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:37.097" level="INFO">${PREFIX} = 72135</msg>
<status status="PASS" starttime="20200902 18:20:37.097" endtime="20200902 18:20:37.097"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.096" endtime="20200902 18:20:37.097"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:37.099" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 72135/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:38.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:38.744" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "72135/multipartKey4",
    "UploadId": "U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:37.098" endtime="20200902 18:20:38.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:38.745" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "72135/multipartKey4",
    "UploadId": "U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:38.745" endtime="20200902 18:20:38.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:38.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:38.745" endtime="20200902 18:20:38.745"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:37.097" endtime="20200902 18:20:38.746"></status>
</kw>
<msg timestamp="20200902 18:20:38.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:37.097" endtime="20200902 18:20:38.746"></status>
</kw>
<msg timestamp="20200902 18:20:38.746" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "72135/multipartKey4",
    "UploadId": "U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:37.097" endtime="20200902 18:20:38.746"></status>
</kw>
<msg timestamp="20200902 18:20:38.746" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "72135/multipartKey4",
    "UploadId": "U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--"
}</msg>
<status status="PASS" starttime="20200902 18:20:37.097" endtime="20200902 18:20:38.746"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:38.748" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "72135/multipartKey4",
    "UploadId": "U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:38.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:38.776" level="INFO">${output} = U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--</msg>
<status status="PASS" starttime="20200902 18:20:38.746" endtime="20200902 18:20:38.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:38.777" level="INFO">U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--</msg>
<status status="PASS" starttime="20200902 18:20:38.776" endtime="20200902 18:20:38.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:38.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:38.778" endtime="20200902 18:20:38.778"></status>
</kw>
<msg timestamp="20200902 18:20:38.778" level="INFO">${uploadID} = U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA--</msg>
<status status="PASS" starttime="20200902 18:20:38.746" endtime="20200902 18:20:38.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:38.778" endtime="20200902 18:20:38.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:38.778" endtime="20200902 18:20:38.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:38.779" endtime="20200902 18:20:38.779"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:38.781" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com abort-multipart-upload --bucket ozonetest --key 72135/multipartKey4 --upload-id U.K8vVbQqJGn4eMFKRm8ysKixVgi0V5NHtNwarKfqQWFBGbsujY2jM.KKBcP5ipy5xUtCSFxCF1OghU2HG.aDA-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:40.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:40.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:38.779" endtime="20200902 18:20:40.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:40.383" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:40.382" endtime="20200902 18:20:40.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:40.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:40.383" endtime="20200902 18:20:40.383"></status>
</kw>
<msg timestamp="20200902 18:20:40.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:38.779" endtime="20200902 18:20:40.383"></status>
</kw>
<msg timestamp="20200902 18:20:40.383" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200902 18:20:38.779" endtime="20200902 18:20:40.384"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:37.096" endtime="20200902 18:20:40.384" critical="yes"></status>
</test>
<test id="s1-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:40.385" level="INFO">${random} = 11165</msg>
<status status="PASS" starttime="20200902 18:20:40.384" endtime="20200902 18:20:40.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:40.385" level="INFO">${PREFIX} = 11165</msg>
<status status="PASS" starttime="20200902 18:20:40.385" endtime="20200902 18:20:40.385"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:40.384" endtime="20200902 18:20:40.385"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:40.396" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com abort-multipart-upload --bucket ozonetest --key 11165/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:42.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:42.316" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:40.394" endtime="20200902 18:20:42.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:42.317" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:42.316" endtime="20200902 18:20:42.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:42.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:42.317" endtime="20200902 18:20:42.317"></status>
</kw>
<msg timestamp="20200902 18:20:42.317" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:40.386" endtime="20200902 18:20:42.317"></status>
</kw>
<msg timestamp="20200902 18:20:42.317" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:40.385" endtime="20200902 18:20:42.317"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:40.384" endtime="20200902 18:20:42.317" critical="yes"></status>
</test>
<test id="s1-t7" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:42.318" level="INFO">${random} = 21058</msg>
<status status="PASS" starttime="20200902 18:20:42.318" endtime="20200902 18:20:42.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:42.318" level="INFO">${PREFIX} = 21058</msg>
<status status="PASS" starttime="20200902 18:20:42.318" endtime="20200902 18:20:42.319"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:42.318" endtime="20200902 18:20:42.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:42.321" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20200902 18:20:42.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:42.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:42.319" endtime="20200902 18:20:42.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:42.324" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:42.323" endtime="20200902 18:20:42.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:42.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:42.324" endtime="20200902 18:20:42.324"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:42.319" endtime="20200902 18:20:42.324"></status>
</kw>
<msg timestamp="20200902 18:20:42.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:42.319" endtime="20200902 18:20:42.324"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:42.319" endtime="20200902 18:20:42.324"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:42.326" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 21058/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:44.055" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 18:20:44.055" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:42.325" endtime="20200902 18:20:44.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:44.056" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:44.055" endtime="20200902 18:20:44.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:44.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:44.056" endtime="20200902 18:20:44.056"></status>
</kw>
<msg timestamp="20200902 18:20:44.056" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:42.325" endtime="20200902 18:20:44.056"></status>
</kw>
<msg timestamp="20200902 18:20:44.056" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.</msg>
<status status="PASS" starttime="20200902 18:20:42.324" endtime="20200902 18:20:44.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:44.057" endtime="20200902 18:20:44.057"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:42.317" endtime="20200902 18:20:44.057" critical="yes"></status>
</test>
<test id="s1-t8" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:44.058" level="INFO">${random} = 99096</msg>
<status status="PASS" starttime="20200902 18:20:44.058" endtime="20200902 18:20:44.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:44.058" level="INFO">${PREFIX} = 99096</msg>
<status status="PASS" starttime="20200902 18:20:44.058" endtime="20200902 18:20:44.058"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:44.057" endtime="20200902 18:20:44.058"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:44.061" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 99096/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:45.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:45.591" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "99096/multipartKey5",
    "UploadId": "pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--"
}</msg>
<status status="PASS" starttime="20200902 18:20:44.059" endtime="20200902 18:20:45.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.591" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "99096/multipartKey5",
    "UploadId": "pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--"
}</msg>
<status status="PASS" starttime="20200902 18:20:45.591" endtime="20200902 18:20:45.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:45.591" endtime="20200902 18:20:45.592"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:44.059" endtime="20200902 18:20:45.592"></status>
</kw>
<msg timestamp="20200902 18:20:45.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:44.059" endtime="20200902 18:20:45.592"></status>
</kw>
<msg timestamp="20200902 18:20:45.592" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "99096/multipartKey5",
    "UploadId": "pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--"
}</msg>
<status status="PASS" starttime="20200902 18:20:44.059" endtime="20200902 18:20:45.592"></status>
</kw>
<msg timestamp="20200902 18:20:45.592" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "99096/multipartKey5",
    "UploadId": "pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--"
}</msg>
<status status="PASS" starttime="20200902 18:20:44.058" endtime="20200902 18:20:45.592"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:45.594" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "99096/multipartKey5",
    "UploadId": "pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:45.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:45.620" level="INFO">${output} = pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--</msg>
<status status="PASS" starttime="20200902 18:20:45.592" endtime="20200902 18:20:45.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.620" level="INFO">pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--</msg>
<status status="PASS" starttime="20200902 18:20:45.620" endtime="20200902 18:20:45.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:45.620" endtime="20200902 18:20:45.621"></status>
</kw>
<msg timestamp="20200902 18:20:45.621" level="INFO">${uploadID} = pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ--</msg>
<status status="PASS" starttime="20200902 18:20:45.592" endtime="20200902 18:20:45.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:45.621" endtime="20200902 18:20:45.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:45.621" endtime="20200902 18:20:45.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:45.621" endtime="20200902 18:20:45.622"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:45.624" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:45.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:45.748" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.120795 s, 43.4 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:45.623" endtime="20200902 18:20:45.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.749" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.120795 s, 43.4 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:45.749" endtime="20200902 18:20:45.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:45.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:45.749" endtime="20200902 18:20:45.749"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:45.623" endtime="20200902 18:20:45.749"></status>
</kw>
<msg timestamp="20200902 18:20:45.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:45.623" endtime="20200902 18:20:45.750"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:45.622" endtime="20200902 18:20:45.750"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:45.622" endtime="20200902 18:20:45.750"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:45.622" endtime="20200902 18:20:45.750"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:45.752" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 99096/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:49.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:49.703" level="INFO">${output} = {
    "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\""
}</msg>
<status status="PASS" starttime="20200902 18:20:45.751" endtime="20200902 18:20:49.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.704" level="INFO">{
    "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\""
}</msg>
<status status="PASS" starttime="20200902 18:20:49.703" endtime="20200902 18:20:49.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:49.704" endtime="20200902 18:20:49.704"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:45.751" endtime="20200902 18:20:49.704"></status>
</kw>
<msg timestamp="20200902 18:20:49.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:45.751" endtime="20200902 18:20:49.704"></status>
</kw>
<msg timestamp="20200902 18:20:49.705" level="INFO">${output} = {
    "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\""
}</msg>
<status status="PASS" starttime="20200902 18:20:45.750" endtime="20200902 18:20:49.705"></status>
</kw>
<msg timestamp="20200902 18:20:49.705" level="INFO">${result} = {
    "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\""
}</msg>
<status status="PASS" starttime="20200902 18:20:45.750" endtime="20200902 18:20:49.705"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:49.707" level="INFO">Running command 'echo '{
    "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:49.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:49.732" level="INFO">${output} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:49.705" endtime="20200902 18:20:49.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.733" level="INFO">"b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:49.733" endtime="20200902 18:20:49.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:49.733" endtime="20200902 18:20:49.734"></status>
</kw>
<msg timestamp="20200902 18:20:49.734" level="INFO">${eTag1} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:49.705" endtime="20200902 18:20:49.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:49.734" endtime="20200902 18:20:49.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:49.736" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200902 18:20:49.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:49.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:49.735" endtime="20200902 18:20:49.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.739" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:49.739" endtime="20200902 18:20:49.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:49.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:49.739" endtime="20200902 18:20:49.739"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:49.734" endtime="20200902 18:20:49.739"></status>
</kw>
<msg timestamp="20200902 18:20:49.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:49.734" endtime="20200902 18:20:49.740"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:49.734" endtime="20200902 18:20:49.740"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:49.742" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part --bucket ozonetest --key 99096/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:52.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:52.333" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:49.740" endtime="20200902 18:20:52.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:52.334" level="INFO">{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:52.333" endtime="20200902 18:20:52.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:52.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:52.334" endtime="20200902 18:20:52.334"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:49.740" endtime="20200902 18:20:52.334"></status>
</kw>
<msg timestamp="20200902 18:20:52.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:49.740" endtime="20200902 18:20:52.335"></status>
</kw>
<msg timestamp="20200902 18:20:52.335" level="INFO">${output} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:49.740" endtime="20200902 18:20:52.335"></status>
</kw>
<msg timestamp="20200902 18:20:52.335" level="INFO">${result} = {
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}</msg>
<status status="PASS" starttime="20200902 18:20:49.740" endtime="20200902 18:20:52.335"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:52.337" level="INFO">Running command 'echo '{
    "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:52.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:52.362" level="INFO">${output} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:52.335" endtime="20200902 18:20:52.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:52.363" level="INFO">"9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:52.363" endtime="20200902 18:20:52.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:52.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:52.363" endtime="20200902 18:20:52.363"></status>
</kw>
<msg timestamp="20200902 18:20:52.364" level="INFO">${eTag2} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:52.335" endtime="20200902 18:20:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:52.364" endtime="20200902 18:20:52.364"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:52.366" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com list-parts --bucket ozonetest --key 99096/multipartKey5 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:53.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:53.894" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:52.365" endtime="20200902 18:20:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.895" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20200902 18:20:53.895" endtime="20200902 18:20:53.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:53.895" endtime="20200902 18:20:53.895"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:52.365" endtime="20200902 18:20:53.896"></status>
</kw>
<msg timestamp="20200902 18:20:53.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:52.364" endtime="20200902 18:20:53.896"></status>
</kw>
<msg timestamp="20200902 18:20:53.896" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:52.364" endtime="20200902 18:20:53.896"></status>
</kw>
<msg timestamp="20200902 18:20:53.896" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:52.364" endtime="20200902 18:20:53.896"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:53.898" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:53.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:53.923" level="INFO">${output} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:53.896" endtime="20200902 18:20:53.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.924" level="INFO">"b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:53.923" endtime="20200902 18:20:53.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:53.924" endtime="20200902 18:20:53.924"></status>
</kw>
<msg timestamp="20200902 18:20:53.924" level="INFO">${part1} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:53.896" endtime="20200902 18:20:53.924"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:53.926" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:53.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:53.952" level="INFO">${output} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:53.925" endtime="20200902 18:20:53.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.953" level="INFO">"9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:53.952" endtime="20200902 18:20:53.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:53.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:53.953" endtime="20200902 18:20:53.953"></status>
</kw>
<msg timestamp="20200902 18:20:53.953" level="INFO">${part2} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:53.924" endtime="20200902 18:20:53.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:53.953" endtime="20200902 18:20:53.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:53.954" endtime="20200902 18:20:53.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:53.954" endtime="20200902 18:20:53.954"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:53.956" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com list-parts --bucket ozonetest --key 99096/multipartKey5 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:55.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:55.550" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:53.955" endtime="20200902 18:20:55.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.550" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20200902 18:20:55.550" endtime="20200902 18:20:55.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:55.550" endtime="20200902 18:20:55.551"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:53.955" endtime="20200902 18:20:55.551"></status>
</kw>
<msg timestamp="20200902 18:20:55.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:53.955" endtime="20200902 18:20:55.551"></status>
</kw>
<msg timestamp="20200902 18:20:55.551" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:53.955" endtime="20200902 18:20:55.551"></status>
</kw>
<msg timestamp="20200902 18:20:55.551" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
...</msg>
<status status="PASS" starttime="20200902 18:20:53.954" endtime="20200902 18:20:55.551"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:55.553" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:55.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:55.580" level="INFO">${output} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:55.551" endtime="20200902 18:20:55.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.580" level="INFO">"b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:55.580" endtime="20200902 18:20:55.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:55.580" endtime="20200902 18:20:55.581"></status>
</kw>
<msg timestamp="20200902 18:20:55.581" level="INFO">${part1} = "b8db65bd23b28f55cfa1fb7fa6eb7ce6"</msg>
<status status="PASS" starttime="20200902 18:20:55.551" endtime="20200902 18:20:55.581"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:55.583" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2020-09-02T16:20:48.000Z",
            "ETag": "\"b8db65bd23b28f55cfa1fb7fa6eb7ce6\"",
            "Size": 5242880
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:55.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:55.609" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20200902 18:20:55.581" endtime="20200902 18:20:55.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.610" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20200902 18:20:55.609" endtime="20200902 18:20:55.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:55.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:55.610" endtime="20200902 18:20:55.611"></status>
</kw>
<msg timestamp="20200902 18:20:55.611" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20200902 18:20:55.581" endtime="20200902 18:20:55.611"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:55.611" endtime="20200902 18:20:55.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:55.612" endtime="20200902 18:20:55.612"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:55.614" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com list-parts --bucket ozonetest --key 99096/multipartKey5 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:57.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:57.558" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
      ...</msg>
<status status="PASS" starttime="20200902 18:20:55.613" endtime="20200902 18:20:57.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:57.558" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20200902 18:20:57.558" endtime="20200902 18:20:57.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:57.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:57.559" endtime="20200902 18:20:57.559"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:55.613" endtime="20200902 18:20:57.559"></status>
</kw>
<msg timestamp="20200902 18:20:57.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:55.613" endtime="20200902 18:20:57.559"></status>
</kw>
<msg timestamp="20200902 18:20:57.559" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
      ...</msg>
<status status="PASS" starttime="20200902 18:20:55.612" endtime="20200902 18:20:57.559"></status>
</kw>
<msg timestamp="20200902 18:20:57.559" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
      ...</msg>
<status status="PASS" starttime="20200902 18:20:55.612" endtime="20200902 18:20:57.559"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:57.561" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2020-09-02T16:20:52.000Z",
            "ETag": "\"9e6cc3c0311e8eb9548e860d8caf6734\"",
            "Size": 6
        }
    ],
    "Initiator": {
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
        "DisplayName": "e1428"
    },
    "Owner": {
        "DisplayName": "e1428",
        "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
    },
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:57.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:57.587" level="INFO">${output} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:57.560" endtime="20200902 18:20:57.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:57.588" level="INFO">"9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:57.587" endtime="20200902 18:20:57.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:57.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:57.588" endtime="20200902 18:20:57.588"></status>
</kw>
<msg timestamp="20200902 18:20:57.588" level="INFO">${part2} = "9e6cc3c0311e8eb9548e860d8caf6734"</msg>
<status status="PASS" starttime="20200902 18:20:57.559" endtime="20200902 18:20:57.588"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:57.588" endtime="20200902 18:20:57.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200902 18:20:57.589" endtime="20200902 18:20:57.589"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:57.591" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com abort-multipart-upload --bucket ozonetest --key 99096/multipartKey5 --upload-id pbV_ZdHFsngyKSmbxJfjnIxETFo29gHd6bt_xrLGvH7UJECQVMWMj7w4Q6lDsayFS9XEFV.FlKrdjA22WOJotQ-- 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:59.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:59.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:57.589" endtime="20200902 18:20:59.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:59.084" level="INFO"></msg>
<status status="PASS" starttime="20200902 18:20:59.083" endtime="20200902 18:20:59.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:59.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:59.084" endtime="20200902 18:20:59.084"></status>
</kw>
<msg timestamp="20200902 18:20:59.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200902 18:20:57.589" endtime="20200902 18:20:59.084"></status>
</kw>
<msg timestamp="20200902 18:20:59.084" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200902 18:20:57.589" endtime="20200902 18:20:59.084"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:44.057" endtime="20200902 18:20:59.085" critical="yes"></status>
</test>
<test id="s1-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:20:59.086" level="INFO">${random} = 93911</msg>
<status status="PASS" starttime="20200902 18:20:59.086" endtime="20200902 18:20:59.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:20:59.086" level="INFO">${PREFIX} = 93911</msg>
<status status="PASS" starttime="20200902 18:20:59.086" endtime="20200902 18:20:59.086"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.085" endtime="20200902 18:20:59.086"></status>
</kw>
<kw name="Create Random file">
<arguments>
<arg>22</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:59.088" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:20:59.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:20:59.619" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB, 22 MiB) copied, 0.526947 s, 43.8 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:59.087" endtime="20200902 18:20:59.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:20:59.620" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB, 22 MiB) copied, 0.526947 s, 43.8 MB/s</msg>
<status status="PASS" starttime="20200902 18:20:59.619" endtime="20200902 18:20:59.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:20:59.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:20:59.620" endtime="20200902 18:20:59.620"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.087" endtime="20200902 18:20:59.620"></status>
</kw>
<msg timestamp="20200902 18:20:59.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:59.087" endtime="20200902 18:20:59.620"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.086" endtime="20200902 18:20:59.621"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.086" endtime="20200902 18:20:59.621"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:20:59.623" level="INFO">Running command 'aws s3 --endpoint-url https://s3.us-east-1.amazonaws.com cp /tmp/part1 s3://ozonetest/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:21:06.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:21:06.976" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (159.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (298.9 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (447.2 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20200902 18:20:59.622" endtime="20200902 18:21:06.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:21:06.976" level="INFO">Completed 256.0 KiB/22.0 MiB (159.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (298.9 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (447.2 KiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (564.2 KiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (703.4 KiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (841.2 KiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (979.6 KiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (1.0 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (1.6 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (1.7 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (2.2 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining   
upload: ../../../../../../../../../../tmp/part1 to s3://ozonetest/mpyawscli</msg>
<status status="PASS" starttime="20200902 18:21:06.976" endtime="20200902 18:21:06.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:21:06.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:21:06.977" endtime="20200902 18:21:06.977"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.621" endtime="20200902 18:21:06.977"></status>
</kw>
<msg timestamp="20200902 18:21:06.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:20:59.621" endtime="20200902 18:21:06.977"></status>
</kw>
<msg timestamp="20200902 18:21:06.977" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (159.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (298.9 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (447.2 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20200902 18:20:59.621" endtime="20200902 18:21:06.977"></status>
</kw>
<status status="PASS" starttime="20200902 18:20:59.621" endtime="20200902 18:21:06.977"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:21:06.980" level="INFO">Running command 'aws s3 --endpoint-url https://s3.us-east-1.amazonaws.com cp s3://ozonetest/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:27.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:27.009" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (104.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (196.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (241.4 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20200902 18:21:06.978" endtime="20200902 18:24:27.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:27.009" level="INFO">Completed 256.0 KiB/22.0 MiB (104.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (196.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (241.4 KiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (311.3 KiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (367.5 KiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (403.0 KiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (411.1 KiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (460.6 KiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (455.7 KiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (490.5 KiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (505.0 KiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (503.9 KiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (545.3 KiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (549.7 KiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (549.0 KiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (584.0 KiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (587.1 KiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (591.5 KiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (620.7 KiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (634.8 KiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (655.8 KiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (662.7 KiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (687.8 KiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (688.4 KiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (684.8 KiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (694.4 KiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (710.0 KiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (710.9 KiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (713.5 KiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (726.1 KiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (736.2 KiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (738.2 KiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (740.2 KiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (754.8 KiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (764.0 KiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (765.4 KiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (770.2 KiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (787.5 KiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (795.4 KiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (808.4 KiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (810.2 KiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (824.6 KiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (824.4 KiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (833.7 KiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (844.5 KiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (844.0 KiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (853.9 KiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (865.4 KiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (864.7 KiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (876.9 KiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (882.7 KiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (879.8 KiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (871.2 KiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (864.2 KiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (862.0 KiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (855.3 KiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (858.8 KiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (857.2 KiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (855.7 KiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (845.7 KiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (579.1 KiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (470.6 KiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (397.4 KiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (314.7 KiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (298.9 KiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (274.8 KiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (248.0 KiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (229.6 KiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (211.4 KiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (196.3 KiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (185.0 KiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (179.2 KiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (175.1 KiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (171.1 KiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (162.5 KiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (152.9 KiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (148.4 KiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (142.6 KiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (139.5 KiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (135.8 KiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (131.6 KiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (130.8 KiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (129.5 KiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (125.9 KiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (123.0 KiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (120.4 KiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (117.7 KiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (113.9 KiB/s) with 1 file(s) remaining 
download: s3://ozonetest/mpyawscli to ../../../../../../../../../../tmp/part1.result</msg>
<status status="PASS" starttime="20200902 18:24:27.009" endtime="20200902 18:24:27.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:27.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:27.010" endtime="20200902 18:24:27.010"></status>
</kw>
<status status="PASS" starttime="20200902 18:21:06.978" endtime="20200902 18:24:27.010"></status>
</kw>
<msg timestamp="20200902 18:24:27.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:21:06.978" endtime="20200902 18:24:27.010"></status>
</kw>
<msg timestamp="20200902 18:24:27.010" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (104.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (196.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (241.4 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20200902 18:21:06.978" endtime="20200902 18:24:27.010"></status>
</kw>
<status status="PASS" starttime="20200902 18:21:06.977" endtime="20200902 18:24:27.010"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>rm s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:27.013" level="INFO">Running command 'aws s3 --endpoint-url https://s3.us-east-1.amazonaws.com rm s3://ozonetest/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:28.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:28.780" level="INFO">${output} = delete: s3://ozonetest/mpyawscli</msg>
<status status="PASS" starttime="20200902 18:24:27.011" endtime="20200902 18:24:28.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.781" level="INFO">delete: s3://ozonetest/mpyawscli</msg>
<status status="PASS" starttime="20200902 18:24:28.780" endtime="20200902 18:24:28.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:28.781" endtime="20200902 18:24:28.781"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:27.011" endtime="20200902 18:24:28.781"></status>
</kw>
<msg timestamp="20200902 18:24:28.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:27.011" endtime="20200902 18:24:28.781"></status>
</kw>
<msg timestamp="20200902 18:24:28.781" level="INFO">${output} = delete: s3://ozonetest/mpyawscli</msg>
<status status="PASS" starttime="20200902 18:24:27.011" endtime="20200902 18:24:28.781"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:27.010" endtime="20200902 18:24:28.781"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:28.784" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:28.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:28.819" level="INFO">${output} = fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.782" endtime="20200902 18:24:28.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.819" level="INFO">fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.819" endtime="20200902 18:24:28.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:28.819" endtime="20200902 18:24:28.820"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.782" endtime="20200902 18:24:28.820"></status>
</kw>
<msg timestamp="20200902 18:24:28.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:28.782" endtime="20200902 18:24:28.820"></status>
</kw>
<msg timestamp="20200902 18:24:28.820" level="INFO">${checksumbefore} = fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.782" endtime="20200902 18:24:28.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:28.822" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:28.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:28.857" level="INFO">${output} = fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.821" endtime="20200902 18:24:28.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.858" level="INFO">fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.858" endtime="20200902 18:24:28.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:28.858" endtime="20200902 18:24:28.858"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.820" endtime="20200902 18:24:28.859"></status>
</kw>
<msg timestamp="20200902 18:24:28.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:28.820" endtime="20200902 18:24:28.859"></status>
</kw>
<msg timestamp="20200902 18:24:28.859" level="INFO">${checksumafter} = fef37fc44aa51b667b6836189e461b55</msg>
<status status="PASS" starttime="20200902 18:24:28.820" endtime="20200902 18:24:28.859"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:28.859" endtime="20200902 18:24:28.859"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.782" endtime="20200902 18:24:28.859"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:20:59.085" endtime="20200902 18:24:28.859" critical="yes"></status>
</test>
<test id="s1-t10" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:24:28.861" level="INFO">${random} = 14266</msg>
<status status="PASS" starttime="20200902 18:24:28.860" endtime="20200902 18:24:28.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:24:28.861" level="INFO">${PREFIX} = 14266</msg>
<status status="PASS" starttime="20200902 18:24:28.861" endtime="20200902 18:24:28.861"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.860" endtime="20200902 18:24:28.861"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:28.863" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:28.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:29.000" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.127828 s, 41.0 MB/s</msg>
<status status="PASS" starttime="20200902 18:24:28.862" endtime="20200902 18:24:29.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:29.001" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB, 5.0 MiB) copied, 0.127828 s, 41.0 MB/s</msg>
<status status="PASS" starttime="20200902 18:24:29.000" endtime="20200902 18:24:29.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:29.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:29.002" endtime="20200902 18:24:29.003"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.862" endtime="20200902 18:24:29.003"></status>
</kw>
<msg timestamp="20200902 18:24:29.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:28.862" endtime="20200902 18:24:29.003"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.861" endtime="20200902 18:24:29.003"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.861" endtime="20200902 18:24:29.003"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:28.861" endtime="20200902 18:24:29.004"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:29.012" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com put-object --bucket ozonetest --key 14266/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:31.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:31.987" level="INFO">${output} = {
    "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\""
}</msg>
<status status="PASS" starttime="20200902 18:24:29.006" endtime="20200902 18:24:31.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:31.987" level="INFO">{
    "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\""
}</msg>
<status status="PASS" starttime="20200902 18:24:31.987" endtime="20200902 18:24:31.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:31.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:31.988" endtime="20200902 18:24:31.988"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:29.006" endtime="20200902 18:24:31.988"></status>
</kw>
<msg timestamp="20200902 18:24:31.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:29.005" endtime="20200902 18:24:31.988"></status>
</kw>
<msg timestamp="20200902 18:24:31.988" level="INFO">${output} = {
    "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\""
}</msg>
<status status="PASS" starttime="20200902 18:24:29.005" endtime="20200902 18:24:31.988"></status>
</kw>
<msg timestamp="20200902 18:24:31.988" level="INFO">${result} = {
    "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\""
}</msg>
<status status="PASS" starttime="20200902 18:24:29.004" endtime="20200902 18:24:31.988"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:31.991" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 14266/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:33.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:33.468" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "UploadId": "eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--"
}</msg>
<status status="PASS" starttime="20200902 18:24:31.990" endtime="20200902 18:24:33.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:33.468" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "UploadId": "eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--"
}</msg>
<status status="PASS" starttime="20200902 18:24:33.468" endtime="20200902 18:24:33.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:33.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:33.468" endtime="20200902 18:24:33.469"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:31.989" endtime="20200902 18:24:33.469"></status>
</kw>
<msg timestamp="20200902 18:24:33.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:31.989" endtime="20200902 18:24:33.469"></status>
</kw>
<msg timestamp="20200902 18:24:33.469" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "UploadId": "eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--"
}</msg>
<status status="PASS" starttime="20200902 18:24:31.989" endtime="20200902 18:24:33.469"></status>
</kw>
<msg timestamp="20200902 18:24:33.469" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "UploadId": "eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--"
}</msg>
<status status="PASS" starttime="20200902 18:24:31.989" endtime="20200902 18:24:33.469"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:33.471" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "UploadId": "eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:33.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:33.497" level="INFO">${output} = eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--</msg>
<status status="PASS" starttime="20200902 18:24:33.469" endtime="20200902 18:24:33.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:33.498" level="INFO">eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--</msg>
<status status="PASS" starttime="20200902 18:24:33.497" endtime="20200902 18:24:33.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:33.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:33.498" endtime="20200902 18:24:33.498"></status>
</kw>
<msg timestamp="20200902 18:24:33.498" level="INFO">${uploadID} = eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ--</msg>
<status status="PASS" starttime="20200902 18:24:33.469" endtime="20200902 18:24:33.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:33.498" endtime="20200902 18:24:33.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:33.499" endtime="20200902 18:24:33.499"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:33.502" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part-copy --bucket ozonetest --key 14266/copytest/destination --upload-id eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ-- --part-number 1 --copy-source ozonetest/14266/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:35.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:35.461" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\"",
        "LastModified": "2020-09-02T16:24:36.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:33.500" endtime="20200902 18:24:35.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:35.462" level="INFO">{
    "CopyPartResult": {
        "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\"",
        "LastModified": "2020-09-02T16:24:36.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:35.461" endtime="20200902 18:24:35.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:35.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:35.462" endtime="20200902 18:24:35.462"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:33.500" endtime="20200902 18:24:35.462"></status>
</kw>
<msg timestamp="20200902 18:24:35.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:33.500" endtime="20200902 18:24:35.462"></status>
</kw>
<msg timestamp="20200902 18:24:35.463" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\"",
        "LastModified": "2020-09-02T16:24:36.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:33.500" endtime="20200902 18:24:35.463"></status>
</kw>
<msg timestamp="20200902 18:24:35.463" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\"",
        "LastModified": "2020-09-02T16:24:36.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:33.499" endtime="20200902 18:24:35.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:35.463" endtime="20200902 18:24:35.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:35.463" endtime="20200902 18:24:35.463"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:35.466" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "\"b8f02a2d991f9091530c411462e1c5e6\"",
        "LastModified": "2020-09-02T16:24:36.000Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:35.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:35.494" level="INFO">${output} = "b8f02a2d991f9091530c411462e1c5e6"</msg>
<status status="PASS" starttime="20200902 18:24:35.464" endtime="20200902 18:24:35.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:35.494" level="INFO">"b8f02a2d991f9091530c411462e1c5e6"</msg>
<status status="PASS" starttime="20200902 18:24:35.494" endtime="20200902 18:24:35.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:35.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:35.495" endtime="20200902 18:24:35.495"></status>
</kw>
<msg timestamp="20200902 18:24:35.495" level="INFO">${eTag1} = "b8f02a2d991f9091530c411462e1c5e6"</msg>
<status status="PASS" starttime="20200902 18:24:35.464" endtime="20200902 18:24:35.495"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:35.498" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id eRsUKKCzVksdbbUwpn.ISYUOu4qU7VfNMKLiM_W6f4JKRKTNon84LMIBk..FAk1q00uarvHlnOPR6wE8PC9BaQ-- --bucket ozonetest --key 14266/copytest/destination --multipart-upload 'Parts=[{ETag="b8f02a2d991f9091530c411462e1c5e6",PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:37.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:37.245" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/14266%2Fcopytest%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "ETag": "\"c91379e87e1358021fe9...</msg>
<status status="PASS" starttime="20200902 18:24:35.496" endtime="20200902 18:24:37.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:37.246" level="INFO">{
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/14266%2Fcopytest%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "ETag": "\"c91379e87e1358021fe9cfda08eac49d-1\""
}</msg>
<status status="PASS" starttime="20200902 18:24:37.245" endtime="20200902 18:24:37.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:37.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:37.246" endtime="20200902 18:24:37.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:35.496" endtime="20200902 18:24:37.246"></status>
</kw>
<msg timestamp="20200902 18:24:37.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:35.496" endtime="20200902 18:24:37.246"></status>
</kw>
<msg timestamp="20200902 18:24:37.246" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/14266%2Fcopytest%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "14266/copytest/destination",
    "ETag": "\"c91379e87e1358021fe9...</msg>
<status status="PASS" starttime="20200902 18:24:35.496" endtime="20200902 18:24:37.246"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:35.495" endtime="20200902 18:24:37.247"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:37.249" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com get-object --bucket ozonetest --key 14266/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:40.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:40.079" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:34 GMT",
    "ContentLength": 5242880,
    "ETag": "\"c91379e87e1358021fe9cfda08eac49d-1\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:24:37.248" endtime="20200902 18:24:40.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.079" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:34 GMT",
    "ContentLength": 5242880,
    "ETag": "\"c91379e87e1358021fe9cfda08eac49d-1\"",
    "ContentType": "binary/octet-stream",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200902 18:24:40.079" endtime="20200902 18:24:40.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:40.080" endtime="20200902 18:24:40.080"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:37.247" endtime="20200902 18:24:40.080"></status>
</kw>
<msg timestamp="20200902 18:24:40.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:37.247" endtime="20200902 18:24:40.080"></status>
</kw>
<msg timestamp="20200902 18:24:40.080" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:34 GMT",
    "ContentLength": 5242880,
    "ETag": "\"c91379e87e1358021fe9cfda08eac49d-1\"",
    "ContentType": "binary/octet...</msg>
<status status="PASS" starttime="20200902 18:24:37.247" endtime="20200902 18:24:40.080"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:37.247" endtime="20200902 18:24:40.080"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:40.083" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:40.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:40.094" level="INFO">${output} = b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.081" endtime="20200902 18:24:40.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.094" level="INFO">b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.094" endtime="20200902 18:24:40.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:40.094" endtime="20200902 18:24:40.095"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.081" endtime="20200902 18:24:40.095"></status>
</kw>
<msg timestamp="20200902 18:24:40.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:40.081" endtime="20200902 18:24:40.095"></status>
</kw>
<msg timestamp="20200902 18:24:40.095" level="INFO">${checksumbefore} = b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.081" endtime="20200902 18:24:40.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:40.097" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:40.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:40.108" level="INFO">${output} = b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.096" endtime="20200902 18:24:40.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.109" level="INFO">b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.108" endtime="20200902 18:24:40.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:40.109" endtime="20200902 18:24:40.109"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.095" endtime="20200902 18:24:40.109"></status>
</kw>
<msg timestamp="20200902 18:24:40.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:40.095" endtime="20200902 18:24:40.109"></status>
</kw>
<msg timestamp="20200902 18:24:40.109" level="INFO">${checksumafter} = b8f02a2d991f9091530c411462e1c5e6</msg>
<status status="PASS" starttime="20200902 18:24:40.095" endtime="20200902 18:24:40.109"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:40.109" endtime="20200902 18:24:40.110"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.080" endtime="20200902 18:24:40.110"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:24:28.859" endtime="20200902 18:24:40.110" critical="yes"></status>
</test>
<test id="s1-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:24:40.111" level="INFO">${random} = 33209</msg>
<status status="PASS" starttime="20200902 18:24:40.111" endtime="20200902 18:24:40.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.111" level="INFO">${PREFIX} = 33209</msg>
<status status="PASS" starttime="20200902 18:24:40.111" endtime="20200902 18:24:40.111"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.111" endtime="20200902 18:24:40.111"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>10</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>10</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:40.114" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:40.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:40.384" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB, 10 MiB) copied, 0.266909 s, 39.3 MB/s</msg>
<status status="PASS" starttime="20200902 18:24:40.112" endtime="20200902 18:24:40.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.385" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB, 10 MiB) copied, 0.266909 s, 39.3 MB/s</msg>
<status status="PASS" starttime="20200902 18:24:40.385" endtime="20200902 18:24:40.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:40.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:40.385" endtime="20200902 18:24:40.386"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.112" endtime="20200902 18:24:40.386"></status>
</kw>
<msg timestamp="20200902 18:24:40.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:40.112" endtime="20200902 18:24:40.386"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.112" endtime="20200902 18:24:40.386"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.112" endtime="20200902 18:24:40.386"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.111" endtime="20200902 18:24:40.386"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:40.388" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com put-object --bucket ozonetest --key 33209/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:43.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:43.288" level="INFO">${output} = {
    "ETag": "\"b09f2fcb1895b6e236747f77e22fb39e\""
}</msg>
<status status="PASS" starttime="20200902 18:24:40.387" endtime="20200902 18:24:43.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:43.289" level="INFO">{
    "ETag": "\"b09f2fcb1895b6e236747f77e22fb39e\""
}</msg>
<status status="PASS" starttime="20200902 18:24:43.288" endtime="20200902 18:24:43.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:43.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:43.289" endtime="20200902 18:24:43.289"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:40.387" endtime="20200902 18:24:43.289"></status>
</kw>
<msg timestamp="20200902 18:24:43.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:40.387" endtime="20200902 18:24:43.289"></status>
</kw>
<msg timestamp="20200902 18:24:43.289" level="INFO">${output} = {
    "ETag": "\"b09f2fcb1895b6e236747f77e22fb39e\""
}</msg>
<status status="PASS" starttime="20200902 18:24:40.386" endtime="20200902 18:24:43.289"></status>
</kw>
<msg timestamp="20200902 18:24:43.290" level="INFO">${result} = {
    "ETag": "\"b09f2fcb1895b6e236747f77e22fb39e\""
}</msg>
<status status="PASS" starttime="20200902 18:24:40.386" endtime="20200902 18:24:43.290"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:43.292" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 33209/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:44.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:44.805" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "UploadId": "0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--"
}</msg>
<status status="PASS" starttime="20200902 18:24:43.291" endtime="20200902 18:24:44.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:44.806" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "UploadId": "0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--"
}</msg>
<status status="PASS" starttime="20200902 18:24:44.805" endtime="20200902 18:24:44.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:44.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:44.806" endtime="20200902 18:24:44.806"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:43.290" endtime="20200902 18:24:44.807"></status>
</kw>
<msg timestamp="20200902 18:24:44.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:43.290" endtime="20200902 18:24:44.807"></status>
</kw>
<msg timestamp="20200902 18:24:44.807" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "UploadId": "0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--"
}</msg>
<status status="PASS" starttime="20200902 18:24:43.290" endtime="20200902 18:24:44.807"></status>
</kw>
<msg timestamp="20200902 18:24:44.807" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "UploadId": "0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--"
}</msg>
<status status="PASS" starttime="20200902 18:24:43.290" endtime="20200902 18:24:44.807"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:44.809" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "UploadId": "0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:44.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:44.836" level="INFO">${output} = 0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--</msg>
<status status="PASS" starttime="20200902 18:24:44.807" endtime="20200902 18:24:44.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:44.837" level="INFO">0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--</msg>
<status status="PASS" starttime="20200902 18:24:44.837" endtime="20200902 18:24:44.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:44.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:44.837" endtime="20200902 18:24:44.837"></status>
</kw>
<msg timestamp="20200902 18:24:44.838" level="INFO">${uploadID} = 0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A--</msg>
<status status="PASS" starttime="20200902 18:24:44.807" endtime="20200902 18:24:44.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:44.838" endtime="20200902 18:24:44.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:44.838" endtime="20200902 18:24:44.838"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:44.841" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part-copy --bucket ozonetest --key 33209/copyrange/destination --upload-id 0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A-- --part-number 1 --copy-source ozonetest/33209/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:46.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:46.732" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"718a66a04077051769fb3618e4630325\"",
        "LastModified": "2020-09-02T16:24:47.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:44.840" endtime="20200902 18:24:46.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:46.733" level="INFO">{
    "CopyPartResult": {
        "ETag": "\"718a66a04077051769fb3618e4630325\"",
        "LastModified": "2020-09-02T16:24:47.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:46.732" endtime="20200902 18:24:46.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:46.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:46.733" endtime="20200902 18:24:46.733"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:44.839" endtime="20200902 18:24:46.733"></status>
</kw>
<msg timestamp="20200902 18:24:46.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:44.839" endtime="20200902 18:24:46.733"></status>
</kw>
<msg timestamp="20200902 18:24:46.733" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"718a66a04077051769fb3618e4630325\"",
        "LastModified": "2020-09-02T16:24:47.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:44.839" endtime="20200902 18:24:46.733"></status>
</kw>
<msg timestamp="20200902 18:24:46.734" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "\"718a66a04077051769fb3618e4630325\"",
        "LastModified": "2020-09-02T16:24:47.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:44.838" endtime="20200902 18:24:46.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:46.734" endtime="20200902 18:24:46.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:46.734" endtime="20200902 18:24:46.734"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:46.736" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "\"718a66a04077051769fb3618e4630325\"",
        "LastModified": "2020-09-02T16:24:47.000Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:46.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:46.762" level="INFO">${output} = "718a66a04077051769fb3618e4630325"</msg>
<status status="PASS" starttime="20200902 18:24:46.734" endtime="20200902 18:24:46.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:46.763" level="INFO">"718a66a04077051769fb3618e4630325"</msg>
<status status="PASS" starttime="20200902 18:24:46.762" endtime="20200902 18:24:46.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:46.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:46.763" endtime="20200902 18:24:46.763"></status>
</kw>
<msg timestamp="20200902 18:24:46.763" level="INFO">${eTag1} = "718a66a04077051769fb3618e4630325"</msg>
<status status="PASS" starttime="20200902 18:24:46.734" endtime="20200902 18:24:46.763"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:46.766" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com upload-part-copy --bucket ozonetest --key 33209/copyrange/destination --upload-id 0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A-- --part-number 2 --copy-source ozonetest/33209/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:48.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:48.422" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"f36711c959ee130594baab8c7e58aa80\"",
        "LastModified": "2020-09-02T16:24:49.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:46.764" endtime="20200902 18:24:48.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:48.423" level="INFO">{
    "CopyPartResult": {
        "ETag": "\"f36711c959ee130594baab8c7e58aa80\"",
        "LastModified": "2020-09-02T16:24:49.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:48.422" endtime="20200902 18:24:48.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:48.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:48.423" endtime="20200902 18:24:48.424"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:46.764" endtime="20200902 18:24:48.424"></status>
</kw>
<msg timestamp="20200902 18:24:48.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:46.764" endtime="20200902 18:24:48.424"></status>
</kw>
<msg timestamp="20200902 18:24:48.424" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "\"f36711c959ee130594baab8c7e58aa80\"",
        "LastModified": "2020-09-02T16:24:49.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:46.764" endtime="20200902 18:24:48.424"></status>
</kw>
<msg timestamp="20200902 18:24:48.424" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "\"f36711c959ee130594baab8c7e58aa80\"",
        "LastModified": "2020-09-02T16:24:49.000Z"
    }
}</msg>
<status status="PASS" starttime="20200902 18:24:46.763" endtime="20200902 18:24:48.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:48.424" endtime="20200902 18:24:48.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:48.424" endtime="20200902 18:24:48.425"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:48.426" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "\"f36711c959ee130594baab8c7e58aa80\"",
        "LastModified": "2020-09-02T16:24:49.000Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:48.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:48.453" level="INFO">${output} = "f36711c959ee130594baab8c7e58aa80"</msg>
<status status="PASS" starttime="20200902 18:24:48.425" endtime="20200902 18:24:48.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:48.454" level="INFO">"f36711c959ee130594baab8c7e58aa80"</msg>
<status status="PASS" starttime="20200902 18:24:48.453" endtime="20200902 18:24:48.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:48.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:48.454" endtime="20200902 18:24:48.454"></status>
</kw>
<msg timestamp="20200902 18:24:48.454" level="INFO">${eTag2} = "f36711c959ee130594baab8c7e58aa80"</msg>
<status status="PASS" starttime="20200902 18:24:48.425" endtime="20200902 18:24:48.454"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:48.457" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com complete-multipart-upload --upload-id 0qZxRz8BEIeiOKD4RlRO3mDFGmFMacRROAeh9PsC5dNzWWfU3gsvPx5fRXbm5.gVdJPbS8H0M5yVjhchsBRk.A-- --bucket ozonetest --key 33209/copyrange/destination --multipart-upload 'Parts=[{ETag="718a66a04077051769fb3618e4630325",PartNumber=1},{ETag="f36711c959ee130594baab8c7e58aa80",PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:50.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:50.164" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/33209%2Fcopyrange%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "ETag": "\"85e714a9901628d235...</msg>
<status status="PASS" starttime="20200902 18:24:48.455" endtime="20200902 18:24:50.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:50.165" level="INFO">{
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/33209%2Fcopyrange%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "ETag": "\"85e714a9901628d23563f27ce0696253-2\""
}</msg>
<status status="PASS" starttime="20200902 18:24:50.164" endtime="20200902 18:24:50.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:50.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:50.165" endtime="20200902 18:24:50.165"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:48.455" endtime="20200902 18:24:50.165"></status>
</kw>
<msg timestamp="20200902 18:24:50.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:48.455" endtime="20200902 18:24:50.165"></status>
</kw>
<msg timestamp="20200902 18:24:50.166" level="INFO">${output} = {
    "Location": "https://s3.us-east-1.amazonaws.com/ozonetest/33209%2Fcopyrange%2Fdestination",
    "Bucket": "ozonetest",
    "Key": "33209/copyrange/destination",
    "ETag": "\"85e714a9901628d235...</msg>
<status status="PASS" starttime="20200902 18:24:48.455" endtime="20200902 18:24:50.166"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:48.454" endtime="20200902 18:24:50.166"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:50.168" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com get-object --bucket ozonetest --key 33209/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:54.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:54.084" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:45 GMT",
    "ContentLength": 10485760,
    "ETag": "\"85e714a9901628d23563f27ce0696253-2\"",
    "ContentType": "binary/octe...</msg>
<status status="PASS" starttime="20200902 18:24:50.167" endtime="20200902 18:24:54.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.085" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:45 GMT",
    "ContentLength": 10485760,
    "ETag": "\"85e714a9901628d23563f27ce0696253-2\"",
    "ContentType": "binary/octet-stream",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200902 18:24:54.084" endtime="20200902 18:24:54.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:54.085" endtime="20200902 18:24:54.085"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:50.167" endtime="20200902 18:24:54.085"></status>
</kw>
<msg timestamp="20200902 18:24:54.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:50.167" endtime="20200902 18:24:54.085"></status>
</kw>
<msg timestamp="20200902 18:24:54.086" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 02 Sep 2020 16:24:45 GMT",
    "ContentLength": 10485760,
    "ETag": "\"85e714a9901628d23563f27ce0696253-2\"",
    "ContentType": "binary/octe...</msg>
<status status="PASS" starttime="20200902 18:24:50.166" endtime="20200902 18:24:54.086"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:50.166" endtime="20200902 18:24:54.086"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:54.089" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:54.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:54.107" level="INFO">${output} = b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.087" endtime="20200902 18:24:54.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.107" level="INFO">b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.107" endtime="20200902 18:24:54.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:54.107" endtime="20200902 18:24:54.108"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:54.087" endtime="20200902 18:24:54.108"></status>
</kw>
<msg timestamp="20200902 18:24:54.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:54.087" endtime="20200902 18:24:54.108"></status>
</kw>
<msg timestamp="20200902 18:24:54.108" level="INFO">${checksumbefore} = b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.086" endtime="20200902 18:24:54.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:54.110" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:54.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:54.128" level="INFO">${output} = b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.109" endtime="20200902 18:24:54.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.129" level="INFO">b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.128" endtime="20200902 18:24:54.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:54.129" endtime="20200902 18:24:54.129"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:54.108" endtime="20200902 18:24:54.129"></status>
</kw>
<msg timestamp="20200902 18:24:54.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:54.108" endtime="20200902 18:24:54.129"></status>
</kw>
<msg timestamp="20200902 18:24:54.129" level="INFO">${checksumafter} = b09f2fcb1895b6e236747f77e22fb39e</msg>
<status status="PASS" starttime="20200902 18:24:54.108" endtime="20200902 18:24:54.129"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:54.129" endtime="20200902 18:24:54.130"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:54.086" endtime="20200902 18:24:54.130"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:24:40.110" endtime="20200902 18:24:54.130" critical="yes"></status>
</test>
<test id="s1-t12" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 18:24:54.131" level="INFO">${random} = 92304</msg>
<status status="PASS" starttime="20200902 18:24:54.131" endtime="20200902 18:24:54.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 18:24:54.131" level="INFO">${PREFIX} = 92304</msg>
<status status="PASS" starttime="20200902 18:24:54.131" endtime="20200902 18:24:54.131"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:54.130" endtime="20200902 18:24:54.131"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:54.133" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 92304/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:55.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:55.467" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key1",
    "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--"
}</msg>
<status status="PASS" starttime="20200902 18:24:54.132" endtime="20200902 18:24:55.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:55.468" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key1",
    "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--"
}</msg>
<status status="PASS" starttime="20200902 18:24:55.468" endtime="20200902 18:24:55.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:55.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:55.468" endtime="20200902 18:24:55.468"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:54.132" endtime="20200902 18:24:55.468"></status>
</kw>
<msg timestamp="20200902 18:24:55.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:54.132" endtime="20200902 18:24:55.469"></status>
</kw>
<msg timestamp="20200902 18:24:55.469" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key1",
    "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--"
}</msg>
<status status="PASS" starttime="20200902 18:24:54.131" endtime="20200902 18:24:55.469"></status>
</kw>
<msg timestamp="20200902 18:24:55.469" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key1",
    "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--"
}</msg>
<status status="PASS" starttime="20200902 18:24:54.131" endtime="20200902 18:24:55.469"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:55.471" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key1",
    "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:55.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:55.497" level="INFO">${output} = jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--</msg>
<status status="PASS" starttime="20200902 18:24:55.469" endtime="20200902 18:24:55.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:55.498" level="INFO">jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--</msg>
<status status="PASS" starttime="20200902 18:24:55.498" endtime="20200902 18:24:55.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:55.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:55.498" endtime="20200902 18:24:55.498"></status>
</kw>
<msg timestamp="20200902 18:24:55.499" level="INFO">${uploadID1} = jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--</msg>
<status status="PASS" starttime="20200902 18:24:55.469" endtime="20200902 18:24:55.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:55.499" endtime="20200902 18:24:55.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:55.499" endtime="20200902 18:24:55.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:55.499" endtime="20200902 18:24:55.499"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:55.502" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com create-multipart-upload --bucket ozonetest --key 92304/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:57.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:57.106" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key2",
    "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--"
}</msg>
<status status="PASS" starttime="20200902 18:24:55.500" endtime="20200902 18:24:57.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:57.106" level="INFO">{
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key2",
    "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--"
}</msg>
<status status="PASS" starttime="20200902 18:24:57.106" endtime="20200902 18:24:57.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:57.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:57.106" endtime="20200902 18:24:57.107"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:55.500" endtime="20200902 18:24:57.107"></status>
</kw>
<msg timestamp="20200902 18:24:57.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:55.500" endtime="20200902 18:24:57.107"></status>
</kw>
<msg timestamp="20200902 18:24:57.107" level="INFO">${output} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key2",
    "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--"
}</msg>
<status status="PASS" starttime="20200902 18:24:55.500" endtime="20200902 18:24:57.107"></status>
</kw>
<msg timestamp="20200902 18:24:57.107" level="INFO">${result} = {
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key2",
    "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--"
}</msg>
<status status="PASS" starttime="20200902 18:24:55.500" endtime="20200902 18:24:57.107"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:57.110" level="INFO">Running command 'echo '{
    "Bucket": "ozonetest",
    "Key": "92304/listtest/key2",
    "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:57.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:57.136" level="INFO">${output} = gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--</msg>
<status status="PASS" starttime="20200902 18:24:57.108" endtime="20200902 18:24:57.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:57.137" level="INFO">gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--</msg>
<status status="PASS" starttime="20200902 18:24:57.137" endtime="20200902 18:24:57.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:57.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:57.137" endtime="20200902 18:24:57.137"></status>
</kw>
<msg timestamp="20200902 18:24:57.137" level="INFO">${uploadID2} = gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--</msg>
<status status="PASS" starttime="20200902 18:24:57.107" endtime="20200902 18:24:57.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:57.138" endtime="20200902 18:24:57.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:57.138" endtime="20200902 18:24:57.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:57.138" endtime="20200902 18:24:57.139"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:57.142" level="INFO">Running command 'aws s3api --endpoint-url https://s3.us-east-1.amazonaws.com list-multipart-uploads --bucket ozonetest --prefix 92304/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:58.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:58.746" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--",
            "Key": "92304/listtest/key1",
            "...</msg>
<status status="PASS" starttime="20200902 18:24:57.140" endtime="20200902 18:24:58.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:58.747" level="INFO">{
    "Uploads": [
        {
            "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--",
            "Key": "92304/listtest/key1",
            "Initiated": "2020-09-02T16:24:56.000Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "e1428",
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
            },
            "Initiator": {
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
                "DisplayName": "e1428"
            }
        },
        {
            "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--",
            "Key": "92304/listtest/key2",
            "Initiated": "2020-09-02T16:24:57.000Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "e1428",
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
            },
            "Initiator": {
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
                "DisplayName": "e1428"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20200902 18:24:58.747" endtime="20200902 18:24:58.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:58.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:58.747" endtime="20200902 18:24:58.748"></status>
</kw>
<status status="PASS" starttime="20200902 18:24:57.140" endtime="20200902 18:24:58.748"></status>
</kw>
<msg timestamp="20200902 18:24:58.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200902 18:24:57.139" endtime="20200902 18:24:58.748"></status>
</kw>
<msg timestamp="20200902 18:24:58.748" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--",
            "Key": "92304/listtest/key1",
            "...</msg>
<status status="PASS" starttime="20200902 18:24:57.139" endtime="20200902 18:24:58.748"></status>
</kw>
<msg timestamp="20200902 18:24:58.749" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--",
            "Key": "92304/listtest/key1",
            "...</msg>
<status status="PASS" starttime="20200902 18:24:57.139" endtime="20200902 18:24:58.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID1}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:58.749" endtime="20200902 18:24:58.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID2}</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:58.749" endtime="20200902 18:24:58.750"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 18:24:58.752" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "jiyWewRrQeqm31kc_jo.Y8Kv3MbcnP3Nb94qHWhMQxIZtJ6wXyJNzXPoZzaBJuheyxOk9BrX1yZ1huk3rXSCNw--",
            "Key": "92304/listtest/key1",
            "Initiated": "2020-09-02T16:24:56.000Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "e1428",
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
            },
            "Initiator": {
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
                "DisplayName": "e1428"
            }
        },
        {
            "UploadId": "gZzLX5EI.jeSWAnJtZR6ZUxzSNhC4JCK2PjMcUib4swDtsWcMCYrlNeeHWoJwqwlEGqx2d6fIkEu0rkd3MqHig--",
            "Key": "92304/listtest/key2",
            "Initiated": "2020-09-02T16:24:57.000Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "e1428",
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d"
            },
            "Initiator": {
                "ID": "b8c021b4343e316b28b545df160c6720479a998001ebf7019328b64417fe152d",
                "DisplayName": "e1428"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 18:24:58.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 18:24:58.779" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20200902 18:24:58.750" endtime="20200902 18:24:58.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 18:24:58.780" level="INFO">2</msg>
<status status="PASS" starttime="20200902 18:24:58.779" endtime="20200902 18:24:58.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 18:24:58.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200902 18:24:58.780" endtime="20200902 18:24:58.780"></status>
</kw>
<msg timestamp="20200902 18:24:58.781" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20200902 18:24:58.750" endtime="20200902 18:24:58.781"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20200902 18:24:58.781" endtime="20200902 18:24:58.781"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200902 18:24:54.130" endtime="20200902 18:24:58.781" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200902 18:19:33.860" endtime="20200902 18:24:58.783"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="MultipartUpload">MultipartUpload</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
